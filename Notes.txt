    -Notes-
This file should be a place to compile things I've learned in a readable way outside of the programs, and also to make any plans or etc.

- Start keeping the assembly code of each chapter or something, as example code, remember to change nasm command to take the asm file we're working on 
and assemble it to boot_sect.bin


- It might be smart to try and have a better folder system, and to make scripts to reduce human error and repetitiveness in commands, and predefine file references between folders 
- Scripts could be made for assembling with nasm, compiling with gcc/clang and gobjcopy, copying the working file to a backup of each section's code (as mentioned in the first point)

- This file could be changed to a README.md, for better readability and visibilty on GitHub, or could be separated out into multiple markdowns, for instructions like below and thoughts like above, 
 and for keeping learnings in one place

- Could make a clearScreen function in 32 bit mode to make the 'landed in 32 bit mode' string more obvious, 
would be a good way to get back into the swing of it


 --- Compiling C on M1 Mac Big Sur - Chapter 5 pg. 42 ---
// Compile C source code to object code with gcc/clang, setting target file format to elf32-i386

  $gcc -target i386-none-elf -ffreestanding -c basic.c -o basic.o

// Do this instead of using ld to link
// There might be an equivalent option to -Ttext 0x0, but I need to dig in the manual more

  $gobjcopy -O binary basic.o basic.bin


For GNU ld:
  -Ttext org
    Use org as the starting address for--respectively--the bss, data, or the text segment of the output file. org must be a single 
    hexadecimal integer; for compatibility with other linkers, you may omit the leading `0x' usually associated with hexadecimal values
    
  -Ttext org is equivalent to --section-start=".text"=org
  
For MacOS ld:
  The version of ld included with mac doesn't have -Ttext flag, but has -sect-align which might be the closest equivalent to --section-start
  
  -sectalign segname sectname value
    The section named sectname in the segment segname will have its alignment set to value, where value is a hexadecimal number that must be an integral power of 2.
    
    Mac version of ld also only seems to have apple platforms available as targets so might not be suitable for use in this project.

For gobjcopy:
  There is an equivalent to --section-start in ld, --change-section-address ".text"=org
  
